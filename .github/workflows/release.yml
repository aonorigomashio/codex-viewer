name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name (e.g., v1.2.3)"
        required: true
      release_name:
        description: "Release title (defaults to tag name)"
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.0
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Configure npm auth token
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NPM_TOKEN" ]; then
            echo "NPM_TOKEN secret is required to publish" >&2
            exit 1
          fi
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Publish to npm
        run: npm publish --access public

      - name: Determine release metadata
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag_name }}" >> "$GITHUB_OUTPUT"
            if [ -n "${{ github.event.inputs.release_name }}" ]; then
              echo "name=${{ github.event.inputs.release_name }}" >> "$GITHUB_OUTPUT"
            else
              echo "name=${{ github.event.inputs.tag_name }}" >> "$GITHUB_OUTPUT"
            fi
            echo "target=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "name=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "target=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Select GitHub token
        run: |
          if [ -n "${{ secrets.GH_TOKEN }}" ]; then
            echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          else
            echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          release_name: ${{ steps.meta.outputs.name }}
          target_commitish: ${{ steps.meta.outputs.target }}
          body: "Automated release for ${{ steps.meta.outputs.tag }}"
